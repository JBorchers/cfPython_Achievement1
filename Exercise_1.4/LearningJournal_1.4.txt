Exercise 1.4: File Handling in Python
Learning Goals

●	Use files to store and retrieve data in Python

Reflection Questions

1. Why is file storage important when you’re using Python? What would happen if you didn’t store local files?

File storage is a crucial part of applications that need to read data from files and write data to files. Without file storage, any data that is produced using an earlier part of your code will be lost. With files stored, the application is able to continue using any data that is created at any time -- even after the application is closed.



2. In this Exercise you learned about the pickling process with the pickle.dump() method. What are pickles? In which situations would you choose to use pickles and why? 

Pickles are a way of storing data, but instead of storing data as human-readable text, data is stored as bytes written to a binary file that only the computer can read.
You would use pickles if you are dealing with more complex data, such as data in a dictionary. The pickle will store the data in the binary file so that you could retrieve it with its original structure preserved.



3. In Python, what function do you use to find out which directory you’re currently in? What if you wanted to change your current working directory?

- Find out which directory you're currently in:
print(os.getcwd())

- Navigate to a different directory:
os.chdir("<path to target dir>")



4. Imagine you’re working on a Python script and are worried there may be an error in a block of code. How would you approach the situation to prevent the entire script from terminating due to an error?

Using error handling in your code will allow you to see an error that the script encountered without crashing the entire script. A specific way to do this to ensure the script does not terminate is by using a try-except block.
A try-except block can 'try' a block of code where there could be a probable error. If there is no error, the script continues as normal. If there is an error, the 'except' block notifies the user of the error and can suggest a fix for it. Your entire script will not be terminated if an error is found in a try-except block.



5. You’re now more than halfway through Achievement 1! Take a moment to reflect on your learning in the course so far. How is it going? What’s something you’re proud of so far? Is there something you’re struggling with? What do you need more practice with? Feel free to use these notes to guide your next mentor call. 

So far I think everything is going really well! I'm enjoying the content and feel like I'm learning a lot. It's getting me excited about potentially creating different apps with Python.
Right now I might be struggling a bit with time management. I tend to spend a lot of time trying to format things and make them appear a certain way, but I also recognize that Achievement 1 might not need so much focus on appearance.
I will say I could use some more practice with writing common functions - similar to those that might be part of an interview process at some point.
